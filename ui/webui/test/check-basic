#!/usr/bin/python3
#
# Copyright (C) 2021 Red Hat, Inc.
#
# This program is free software; you can redistribute it and/or modify it
# under the terms of the GNU Lesser General Public License as published by
# the Free Software Foundation; either version 2.1 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
# Lesser General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public License
# along with this program; If not, see <http://www.gnu.org/licenses/>.

import os
import sys

# import Cockpit's machinery for test VMs and its browser test API
TEST_DIR = os.path.dirname(__file__)
sys.path.append(os.path.join(TEST_DIR, "common"))
sys.path.append(os.path.join(os.path.dirname(TEST_DIR), "bots/machine"))

from helpers.installer import Installer
from testlib import MachineCase, nondestructive, test_main  # pylint: disable=import-error
from machine_install import VirtInstallMachine

@nondestructive
class TestBasic(MachineCase):
    MachineCase.machine_class = VirtInstallMachine

    def testNavigation(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)

        i.open()

        self.assertIn(
            b.attr("#app .pf-c-page", "data-debug").lower(),
            ["false", "true"]
        )

        i.check_prerelease_info()

        for page in i.steps[:-1]:
            # with the pages basically empty of common elements (as those are provided by the top-level installer widget)
            # we at least iterate over them to check this works as expected
            i.wait_current_page(page)
            # Do not start the installation in non-destructive tests as this performs non revertible changes
            if page != i.steps.REVIEW:
                i.next()


class TestQuit(MachineCase):
    MachineCase.machine_class = VirtInstallMachine

    def testQuitInstallation(self):
        b = self.browser
        m = self.machine
        i = Installer(b, m)

        i.open()
        i.quit()
        m.wait_poweroff()

if __name__ == '__main__':
    test_main()
