# This workflow checks if the PR affects Anaconda (changes to pyanaconda folder),
# polls the packit COPR until it has the current PR version
# available, and then test-triggers an "anaconda PR" scenario.
#
# This workflow is inspired from:
# https://github.com/cockpit-project/cockpit/blob/main/.github/workflows/trigger-anaconda.yml

name: Anaconda Web UI
on:
  pull_request_target:
    # All file changes that might affect the Web UI
    paths:
      - 'pyanaconda/**'
      - '!pyanaconda/gui/**'
      - '!pyanaconda/tui/**'
      - 'anaconda.py'
      - 'data/anaconda.conf'
      - 'data/conf.d/**/'
      - 'data/profile.d/**'
      - 'po/l10n-config.mk'
    branches: [ main, fedora-* ]

jobs:
  define-matrix:
    uses: ./.github/workflows/define-matrix.yml
    with:
      target_branch: main  # Only run for releases that target main branch
      use_full_releases: true  # Keep full release names for container tags

  trigger-webui:
    needs: define-matrix
    runs-on: ubuntu-24.04
    # the default workflow token cannot read our org membership, for deciding who is allowed to trigger tests
    environment: gh-cockpituous
    # this polls for a COPR build, which can take long
    timeout-minutes: 120
    strategy:
      fail-fast: false
      matrix: ${{ fromJSON(needs.define-matrix.outputs.releases) }}
    container: registry.fedoraproject.org/fedora:${{ matrix.release | replace('fedora-', '') }}

    steps:
      # Naively this should wait for github.event.pull_request.head.sha, but
      # that breaks on non-current branches, which packit merges to main with
      # an unpredictable SHA; so instead, wait until COPR has a build which is
      # newer than the PR push time. This assumes that this workflow always runs earlier
      # than the COPR srpm build finishes.

      - name: Install dependencies
        run: |
          dnf install -y git-core dnf-plugins-core gh

      - name: Wait for packit COPR build
        run: |
          set -ex
          PUSH_TIME=$(date --utc +%Y%m%d%H%M%S -d '${{ github.event.pull_request.head.repo.pushed_at }}')
          COPR_NAME="${{ github.event.pull_request.base.user.login }}-${{ github.event.pull_request.base.repo.name }}-${{ github.event.number }}"
          # Extract version number from release name (e.g., "fedora-43" -> "43", "fedora-rawhide" -> "rawhide")
          FEDORA_VERSION="${{ matrix.release }}"
          VERSION_ID=${FEDORA_VERSION#fedora-}
          for _ in $(seq 60); do
              sleep 60;
              if dnf copr enable -y packit/$COPR_NAME $FEDORA_VERSION-x86_64 &&
                 out=$(dnf info --refresh --repo='copr:*anaconda*' --releasever=$VERSION_ID anaconda) &&
                 stamp=$(echo "$out" | awk '/^Release/ { split($3, v, "."); print substr(v[2], 0, 14)}' | head -1) &&
                 [ "$stamp" -gt "$PUSH_TIME" ]; then
                  exit 0
              fi
          done
          exit 1

      - name: Trigger anaconda run
        id: trigger-anaconda-webui-automatic
        continue-on-error: true
        run: |
          git clone --depth=1 https://github.com/cockpit-project/bots
          mkdir -p ~/.config/cockpit-dev
          echo '${{ secrets.GITHUB_TOKEN }}' > ~/.config/cockpit-dev/github-token

          PR_NUMBER="${{ github.event.number }}"
          REPO="${{ github.repository }}"
          TEST_OS="${{ matrix.release }}-boot"

          bots/tests-trigger --force --repo $REPO $PR_NUMBER $TEST_OS/anaconda-pr-$PR_NUMBER@rhinstaller/anaconda-webui
          bots/tests-trigger --force --repo $REPO $PR_NUMBER $TEST_OS/efi-anaconda-pr-$PR_NUMBER@rhinstaller/anaconda-webui

      - name: Send a PR comment that the bots/tests-trigger needs to be manually triggered
        env:
          GH_TOKEN: ${{ github.token }}
        if: "steps.trigger-anaconda-webui-automatic.outcome == 'failure'"
        run: |
          PR_NUMBER="${{ github.event.number }}"
          REPO="${{ github.repository }}"
          TEST_OS="${{ matrix.release }}-boot"

          echo "Only members of the Anaconda team can trigger the Web UI tests for this PR. Since you do not have permission, please ask an Anaconda team member to run the following commands:" > comment.txt
          echo '```bash' >> comment.txt
          echo "bots/tests-trigger --force --repo ${REPO} ${PR_NUMBER} ${TEST_OS}/anaconda-pr-${PR_NUMBER}@rhinstaller/anaconda-webui" >> comment.txt
          echo "bots/tests-trigger --force --repo ${REPO} ${PR_NUMBER} ${TEST_OS}/efi-anaconda-pr-${PR_NUMBER}@rhinstaller/anaconda-webui" >> comment.txt
          echo '```' >> comment.txt

          gh pr comment "$PR_NUMBER" --repo "$REPO" -F comment.txt
