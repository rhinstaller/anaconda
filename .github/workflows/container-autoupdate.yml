name: Refresh container images
on:
  schedule:
    - cron: 0 0 * * *
  # be able to start this action manually from a actions tab when needed
  workflow_dispatch:

permissions:
  contents: read

jobs:
  refresh-containers:
    name: Refresh anaconda containers
    runs-on: ubuntu-20.04
    environment: quay.io
    # we need to have matrix to cover all branches because schedule is run only on default branch
    # we can add here fedora branches (e.g. f33-devel) to cover their support when needed
    strategy:
      fail-fast: false
      matrix:
        container-tag: ['master', 'eln', 'f36-devel', 'f36-release']
        container-type: ['ci', 'rpm']
        include:
          - container-tag: master
            branch: master
          - container-tag: eln
            branch: master
            base-container: 'quay.io/fedoraci/fedora:eln-x86_64'
          - container-tag: f36-devel
            branch: f36-devel
          - container-tag: f36-release
            branch: f36-release
    env:
      CI_TAG: '${{ matrix.container-tag }}'
    timeout-minutes: 60
    steps:
      - name: Checkout anaconda repository
        uses: actions/checkout@v2
        with:
          ref: ${{ matrix.branch }}

      - name: Build anaconda-${{ matrix.container-type }} container
        run: |
          BASE_CONTAINER=${{ matrix.base-container }}
          make -f Makefile.am anaconda-${{ matrix.container-type }}-build ${BASE_CONTAINER:+BASE_CONTAINER=}${BASE_CONTAINER:-}

      - name: Run tests in anaconda-ci container
        if: matrix.container-type == 'ci'
        run: |
          # put the log in the output, where it's easy to read and link to
          make -f Makefile.am container-ci || { cat test-logs/test-suite.log; exit 1; }

      - name: Run tests in anaconda-rpm container
        if: matrix.container-type == 'rpm'
        run: |
          # put the log in the output, where it's easy to read and link to
          make -f Makefile.am container-rpm-test || { cat test-logs/test-suite.log; exit 1; }

      - name: Upload test and coverage logs from local testing
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.container-tag }}-${{ matrix.container-type }}-logs
          path: |
            test-logs/test-suite.log
            test-logs/unit_tests.log
            test-logs/pylint/runpylint*.log
            test-logs/coverage-*.log

      - name: Login to container registry
        run: podman login -u ${{ secrets.QUAY_USERNAME }} -p ${{ secrets.QUAY_PASSWORD }} quay.io

        # we can hardcode the path to the image here because this will be executed only for master image
      - name: Add latest tag for master container
        if: ${{ matrix.container-tag == 'master' }}
        run: |
          podman tag quay.io/rhinstaller/anaconda-${{ matrix.container-type }}:master quay.io/rhinstaller/anaconda-${{ matrix.container-type }}:latest
          CI_TAG=latest make -f Makefile.am anaconda-${{ matrix.container-type }}-push

      - name: Push container to registry
        run: make -f Makefile.am anaconda-${{ matrix.container-type }}-push
