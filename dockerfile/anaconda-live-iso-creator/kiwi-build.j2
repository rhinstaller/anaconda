#!/bin/bash
#
# Build a Fedora Workstation Live ISO by livemedia-creator. The Live iso will be stored in the `/images/` directory.
# We have to build the RPMs files of Anaconda first and then add them as volume
# mount to /anaconda-rpms to the container (could be RO mount).
#
#   make -f ./Makefile.am container-rpms-scratch
#   podman run -i --rm --privileged --tmpfs /var/tmp:rw,mode=1777 -v `pwd`/result/build/01-rpm-build:/anaconda-rpms:ro -v `pwd`/output-dir:/images:z quay.io/rhinstaller/anaconda-live-iso-creator:main
#
# Input directory:
# /anaconda-rpms/ (Anaconda RPM files for the build)
#
# Output directory:
# /images (Where the boot.iso will be stored)
{% if distro_name == "rhel" %}
#
# WARNING: this solution is not supported on RHEL/CentOS Stream
#
{% endif %}

set -eux

INPUT_RPMS=/anaconda-rpms/
REPO_DIR=/tmp/anaconda-rpms/
OUT_DIR=/images/
LOGS_DIR="$OUT_DIR/logs"
RESULT_DIR="$OUT_DIR/iso"
# fedora-kickstarts clone during the Anaconda build
# https://pagure.io/fedora-kickstarts/tree/main
DESCRIPTIONS=/fedora-kiwi-descriptions
ISO_PROFILE=${ISO_PROFILE:-Workstation-Live}


HTTP_LOG="$LOGS_DIR/http.log"
HTTP_PID=/tmp/httpd.pid

mkdir -p $LOGS_DIR

start_http_server() {
    python3 -m http.server -d . 1>&2 2>$HTTP_LOG &
    echo "$!" > $HTTP_PID

    # extract container IP
    IP=$(ip -4 addr show scope global | grep -oP 'inet \K[\d.]+' | head -n1)
    echo "http://$IP:8000/"
}

stop_http_server() {
    kill -s SIGTERM "$(cat $HTTP_PID)"
}

cleanup() {
    # cleanup build directory
    rm -rf $RESULT_DIR-build
}


#### create and serve repo from provided Anaconda RPMs ####
mkdir -p $REPO_DIR
cp -a $INPUT_RPMS/* $REPO_DIR || echo "RPM files can't be copied!"  # We could just do the build with official repositories only
createrepo_c $REPO_DIR
pushd $REPO_DIR
start_http_server
popd


trap cleanup EXIT INT QUIT PIPE

#### build the live ISO ####
cd $DESCRIPTIONS
./kiwi-build \
    --kiwi-file=Fedora.kiwi \
    --image-type=iso \
    --image-profile="$ISO_PROFILE" \
    --isolated \
    --output-dir="$RESULT_DIR" \
    --image-release=0 \
    --debug \
    -- --add-repo=http://localhost:8000/,rpm-md,localrepo,1,false,false

stop_http_server

mv $RESULT_DIR/*.iso $OUT_DIR/
