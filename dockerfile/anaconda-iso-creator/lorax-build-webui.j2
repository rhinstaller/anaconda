#!/bin/bash
#
# Build a Web UI boot.iso by lorax. The boot.iso will be stored in the `/images/` directory.
# We have to build the RPMs files of Anaconda first and then add them as volume
# mount to /anaconda-rpms to the container (could be RO mount).
#
# Compared to the normal boot.iso we need to patch the templates but other than
# that it's mostly the same.
#
# To run this please do:
#
#   sudo make -f ./Makefile.am container-rpms-scratch
#   sudo podman run -i --rm --privileged --tmpfs /var/tmp:rw,mode=1777 -v `pwd`/result/build/01-rpm-build:/anaconda-rpms:ro -v `pwd`/output-dir:/images:z --entrypoint /lorax-build-webui quay.io/rhinstaller/anaconda-iso-creator:main
#
#
# Input directory:
# /anaconda-rpms/ (Anaconda RPM files for the build)
#
# Output directory:
# /images (Where the boot.iso will be stored)
#
{% if distro_name == "rhel" %}
#
# WARNING: this solution is not supported on RHEL/CentOS Stream
#
{% endif %}

set -eux

# pre-create loop devices manually. In the container you can't use losetup for that.
mknod -m 0660 /dev/loop0 b 7 0  2> /dev/null || true
mknod -m 0660 /dev/loop1 b 7 1  2> /dev/null || true

INPUT_RPMS=/anaconda-rpms/
OUT_DIR=/images/
REPO_DIR=/tmp/anaconda-rpms/

# create repo from provided Anaconda RPMs
mkdir -p $REPO_DIR
cp -a $INPUT_RPMS/* $REPO_DIR || echo "RPM files can't be copied!"  # We could just do the build with official repositories only
createrepo_c $REPO_DIR

cp -r /usr/share/lorax/templates.d/ /lorax/
patch -p2 -i /adjust-templates-for-webui.patch

# build boot.iso with our rpms
. /etc/os-release
# The download.fedoraproject.org automatic redirector often selects download-ib01.f.o. for GitHub's cloud, which is too unreliable; use a mirror
# The --volid argument can cause different network interface naming: https://github.com/rhinstaller/kickstart-tests/issues/448
# Extract version from CI_TAG (e.g., "fedora-rawhide" -> "rawh", "fedora-43" -> "43")
if [ "$CI_TAG" = "fedora-rawhide" ]; then
    VOLID_VERSION="rawh"
    FEDORA_VERSION="rawhide"
else
    VOLID_VERSION=${CI_TAG#fedora-}
    FEDORA_VERSION=$VOLID_VERSION
fi

lorax -p Fedora -v "$VERSION_ID" -r "$VERSION_ID" \
      --volid Fedora-S-dvd-x86_64-$VOLID_VERSION \
      --sharedir ./templates.d/99-generic/ \
      -s http://dl.fedoraproject.org/pub/fedora/linux/development/$FEDORA_VERSION/Everything/x86_64/os/ \
      -s https://fedorapeople.org/groups/anaconda/webui_new_payload/repo/ \
      -s file://$REPO_DIR/ \
      -i anaconda-webui -i webui_payload -i cockpit-ws -i cockpit-bridge -i firefox -i dbus-glib --rootfs-size 5 \
      "$@" \
      output || cp *.log "$OUT_DIR"

cp output/images/boot.iso "$OUT_DIR"

# fix permissions to user permissions on the built artifacts
chown -Rv --reference="$INPUT_RPMS" "$OUT_DIR"
