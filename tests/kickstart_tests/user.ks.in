url @KSTEST_URL@

install

network --bootproto=dhcp

bootloader --timeout=1
zerombr

clearpart --all --initlabel
autopart

keyboard us
lang en
timezone America/New_York

rootpw qweqwe

## TEST CREATE USER
# Create specific user group
group --name=kosygroup --gid=5001

# Create specific user
user --name=kosieh --gecos="Kosieh Barter â˜ƒ" --homedir=/home/kbarter --password="$6$QsJCB9E6geIjWNvn$UZLEtnHYgKmFgrPo0fY1qNBc/aRi9b01f19w9mpdFm9.MPblckUuFYvpRLSzeYeR/6lO/2uY4WtjhbryC0k2L/" --iscrypted --shell=/bin/bash --uid=4001 --gid=5001 --groups=wheel,users

# Give that user a (bogus) ssh key.
sshkey --username=kosieh "this is a bogus ssh key"

shutdown

%packages
%end

%post

## TEST CREATE USER CHECK
# Check group
grep 5001 /etc/group
if [[ $? -ne 0 ]]; then
    echo "*** Group failed to create." >> /root/RESULT
fi

# Check group name
grep kosygroup /etc/group
if [[ $? -ne 0 ]]; then
    echo "*** Group name not present." >> /root/RESULT
fi

# Check find username
grep kosieh /etc/passwd
if [[ $? -ne 0 ]]; then
    echo "*** User is not present in system." >> /root/RESULT
fi

# Check GECOS: real name
# Also check that the unicode made it through ok. The escape sequences are
# U+2603 encoded as UTF-8, which is lovingly hand-encoded here instead of
# just using the character to make sure the character didn't just get mangled
# the same way twice.
grep kosieh /etc/passwd | grep "Kosieh Barter $(echo -ne '\xe2\x98\x83')"
if [[ $? -ne 0 ]]; then
    echo "*** User is present, but not all details: REAL NAME (GEDOS)" >> /root/RESULT
fi

# Check if the user has his/her bash
grep kosieh /etc/passwd | grep "/bin/bash"
if [[ $? -ne 0 ]]; then
    echo "*** User is present, but /bin/bash is not set" >> /root/RESULT
fi

# Check if the user has encrypted password
grep kosieh /etc/shadow | grep "$6$QsJCB9E6geIjWNvn$UZLEtnHYgKmFgrPo0fY1qNBc/aRi9b01f19w9mpdFm9.MPblckUuFYvpRLSzeYeR/6lO/2uY4WtjhbryC0k2L/"
if [[ $? -ne 0 ]]; then
    echo "*** User is present, passwords DO NOT match" >> /root/RESULT
fi

# Check if the user is in correct group
grep kosieh /etc/passwd | grep 5001
if [[ $? -ne 0 ]]; then
    echo "*** User is present, group assignment" >> /root/RESULT
fi

# Check if the user has PHYSICAL home dir
if [[ ! -d /home/kbarter ]]; then
    echo "*** Home directory not found" >> /root/RESULT
fi

# Check for home dir in /etc/passwd
grep /home/kbarter /etc/passwd
if [[ $? -ne 0 ]]; then
    echo "*** Home directory not in passwd file" >> /root/RESULT
fi

# Check that an ssh key was added.
if [[ ! -f /home/kbarter/.ssh/authorized_keys ]]; then
    echo "*** .authorized_keys not created" >> /root/RESULT
fi

perms="$(stat --format='%u %g %a' /home/kbarter/.ssh)"
if [[ "${perms}" != "4001 5001 700" ]]; then
    echo "*** /home/kbarter/.ssh does not have the right permissions; got " ${perms} >> /root/RESULT
fi

perms="$(stat --format='%u %g %a' /home/kbarter/.ssh/authorized_keys)"
if [[ "${perms}" != "4001 5001 600" ]]; then
    echo "*** /home/kbarter/.ssh/authorized_keys does not have the right permissions; got " ${perms} >> /root/RESULT
fi

if [[ "$(cat /home/kbarter/.ssh/authorized_keys)" != "this is a bogus ssh key" ]]; then
    echo "*** .authorized_keys doesn't have the right contents" >> /root/RESULT
fi

# Final check
if [[ ! -e /root/RESULT ]]; then
    echo SUCCESS > /root/RESULT
fi
%end
